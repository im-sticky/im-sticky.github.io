/**
 * Convert font-size from px to rem with px fallback
 *
 * @param $size - the value in pixel you want to convert
 *
 * e.g. p {@include fontSize(12px);}
 *
 */

// Function for converting a px based font-size to rem.
@function pxToRems($size) {
  $remSize: $size / $baseFontSize;
  //Default font size on html element is 100%, equivalent to 16px;
  @return #{$remSize}rem;
}

// Mixin that will include the fall back px declaration as well as the calculated rem value.
@mixin fontSize($size) {
  font-size: pxToRems($size);
}

// hover state mixins
@mixin focusStates() {
  &:hover,
  &:focus,
  &:active {
    @content;
  }
}

@mixin linkStyles($color: $primary-color) {
  color: $color;
  text-decoration: none;
  background-image: linear-gradient(120deg, $primary-color 0%, $primary-color 100%);
  background-repeat: no-repeat;
  background-size: 0 pxToRems(2px);
  background-position: 0 100%;
  transition: background-size $transition-time-normal $transition-ease-out-expo;
}

// content gutters
@mixin gutters() {
  padding-left: pxToRems(16px);
  padding-right: pxToRems(16px);

  @include phone-and-up {
    padding-left: pxToRems(24px);
    padding-right: pxToRems(24px);
  }
}

@mixin pagePadding($includeBottom: false) {
  padding-top: pxToRems(32px);

  @if ($includeBottom) {
    padding-bottom: pxToRems(32px);
  }

  @include phone-and-up {
    padding-top: pxToRems(64px);

    @if ($includeBottom) {
      padding-bottom: pxToRems(64px);
    }
  }
}

// reading text
@mixin readableContent() {
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    margin-top: pxToRems(32px);
    margin-bottom: pxToRems(16px);
  }

  p {
    margin-bottom: pxToRems(16px);
    line-height: 1.71;
  }

  img,
  video {
    max-width: 100%;
  }

  dl {
    dt {
      font-weight: 600;
    }

    dd {
      display: list-item;
      list-style-type: disc;

      + dt {
        margin-top: pxToRems(8px);
      }
    }
  }

  pre {
    margin: 1.5rem 0;
    padding: 1rem;
    border: 1px solid $font-color;
    border-radius: 0.375rem;
    background-color: $subtle-gray;
  }

  code {
    font-size: inherit;
    background-color: $subtle-gray;
    border-radius: 0.125rem;
  }

  blockquote {
    margin: 1.5rem 0;
    padding: 1rem;
    border-left: 3px solid $primary-color;
    background-color: rgba(79, 0, 236, 0.1);

    p {
      margin: 0;
    }
  }
}

// media queries
@mixin phone {
  @media (max-width: #{$phone-width - 1px}) {
    @content;
  }
}

@mixin large-phone {
  @media (min-width: #{$phone-width}) and (max-width: #{$tablet-width - 1px}) {
    @content;
  }
}

@mixin phone-and-up {
  @media (min-width: #{$phone-width}) {
    @content;
  }
}

@mixin tablet {
  @media (min-width: #{$tablet-width}) and (max-width: #{$tablet-landscape-width - 1px}) {
    @content;
  }
}

@mixin tablet-and-up {
  @media (min-width: #{$tablet-width}) {
    @content;
  }
}

@mixin landscape-tablet {
  @media (min-width: #{$tablet-landscape-width}) and (max-width: #{$laptop-width - 1px}) {
    @content;
  }
}

@mixin landscape-tablet-and-up {
  @media (min-width: #{$tablet-landscape-width}) {
    @content;
  }
}

@mixin laptop {
  @media (min-width: #{$laptop-width}) and (max-width: #{$desktop-width - 1px}) {
    @content;
  }
}

@mixin laptop-and-up {
  @media (min-width: #{$laptop-width}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{$desktop-width}) {
    @content;
  }
}
