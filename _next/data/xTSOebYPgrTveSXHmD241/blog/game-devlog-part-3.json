{"pageProps":{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      p: \"p\",\n      em: \"em\",\n      h2: \"h2\",\n      ul: \"ul\",\n      li: \"li\"\n    }, _provideComponents(), props.components), {InternalLink, Figure} = _components;\n    if (!Figure) _missingMdxReference(\"Figure\", true);\n    if (!InternalLink) _missingMdxReference(\"InternalLink\", true);\n    return _jsxs(_Fragment, {\n      children: [_jsx(\"small\", {\n        children: _jsx(\"em\", {\n          children: _jsxs(_components.p, {\n            children: [\"Second post available \", _jsx(InternalLink, {\n              to: \"/blog/game-devlog-part-2\",\n              children: \"here\"\n            }), \".\"]\n          })\n        })\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Hello and welcome to a special \", _jsx(_components.em, {\n          children: \"Game Jam Day\"\n        }), \" edition of my development logs. Well, that may be a bit misleading as a lot of the functionality for this update was developed over the past couple weeks and only some of it was developed on the game jam day. Regardless, this update is a juicy one.\"]\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"I spent a lot of time messing around with player movement and general feel and physics. I spent some time watching youtube videos talking about gravity, acceleration, and general approaches to physics calculations in video games. While a lot of it was not directly related to Godot or how I wanted to handle things specifically, it was a lot of great content which helped guide me on making my character movement feel much smoother. I felt pretty confident with how I had set all the physics related variables for my characters.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"My friends and I had an online game jam session a few weeks ago where we hung out in discord watching Blizzcon (we play Overwatch I'm sorry) and working on our games. It was the first time we had shown each other directly the internals to what we had been developing which I found a lot of fun to learn about. We set up another day to work on our games together in person.\"\n      }), \"\\n\", _jsx(_components.h2, {\n        children: \"Game Jam Day\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"We got together, and Oh man, I went on an emotional rollercoaster. I went in feeling great and confident I would make a ton of progress with my game. Then all of it was thrown in the toilet when I spent most of the day working on my game feeling like I was making no progress and that I was a bad developer. Things were messy, I didn't like the code I was writing, I was struggling to do relatively simple things, and everyone elses games looked so much better. I swore off Godot and making games and was convinced I was going to drop development on my game after today.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"However, there was a turning point. We ate some food and one of my friends who had been making music all day gave me a background song and we spent a solid hour fucking around making sound effects and having fun. It was getting later in the day and I wanted to have something I deemed acceptable for them all to try out and play, so I started to care less about how I was approaching development and just actually doing things. It turns out if you just add to your game and not worry about everything being perfect it becomes a lot more fun. You know, treat it like a game jam.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Playing my game with them all and just having fun fucking around with what I had built was a HUGE confidence booster. I did a total 180 again and want to spend more time developing my game. Having to deal with shitty quirks of the game and live patching moves and tweaking stats after games was so much fun. It helped me shift out of professional developer mode and made me really think of what the game actually was for: us. It was great to get to actually test it out with people for a little while and help me see what was working and what I should focus on next.\"\n      }), \"\\n\", _jsx(_components.h2, {\n        children: \"Game updates\"\n      }), \"\\n\", _jsx(Figure, {\n        video: \"devlog-update-2.webm\",\n        caption: \"My game after the Game Jam Day\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Features of this version in no particular order:\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsxs(_components.li, {\n          children: [\"New features\", \"\\n\", _jsxs(_components.ul, {\n            children: [\"\\n\", _jsx(_components.li, {\n              children: \"Determine winner on round end or health depletion\"\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"Add wall / ground bounce when in hitstun\"\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"Add heavy attack button\"\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"Complete set of hitboxes\"\n            }), \"\\n\"]\n          }), \"\\n\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"General movement updates\", \"\\n\", _jsxs(_components.ul, {\n            children: [\"\\n\", _jsx(_components.li, {\n              children: \"Added acceleration between all movement states\"\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"Add skidding from turning around while running\"\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"Add crouching state\"\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"Allow player to jump out of dash and keep momentum\"\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"Make player not able to switch aerial directions immediately\"\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"Allow player to drop through platform\"\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"Add short hopping\"\n            }), \"\\n\"]\n          }), \"\\n\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"Various small bug fixes\", \"\\n\", _jsxs(_components.ul, {\n            children: [\"\\n\", _jsx(_components.li, {\n              children: \"Change launch vector to hit in direction player is facing\"\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"Fix player not going into airborne state when moving off a platform\"\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"Fix aerial attack landing getting stuck sometimes\"\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"Fix right stick constantly attacking\"\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"Fix stuck in attacking grounded state with an invisible active hitbox active\"\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"Fix double jump refreshing on attack\"\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"Add fast-falling\"\n            }), \"\\n\"]\n          }), \"\\n\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          children: [\"Visuals and art\", \"\\n\", _jsxs(_components.ul, {\n            children: [\"\\n\", _jsx(_components.li, {\n              children: \"Alternate colors for players\"\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"Music and sound effects (fun temporary ones)\"\n            }), \"\\n\", _jsx(_components.li, {\n              children: \"Add player shifting while in hitstop\"\n            }), \"\\n\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{}},"frontMatter":{"title":"Game Devlog - Game Jam Day and second round of updates","description":"An update of my exploits with game development and Godot.","date":"2023-11-25","hero":"where_r_u_going.png"},"posts":[{"date":"2023-12-26","slug":"immortality-review"},{"date":"2023-11-25","slug":"game-devlog-part-3"},{"date":"2023-11-06","slug":"game-devlog-part-2"},{"date":"2023-10-15","slug":"game-devlog-part-1"},{"date":"2022-12-29","slug":"celeste-part-3"},{"date":"2022-12-19","slug":"celeste-part-2"},{"date":"2022-12-04","slug":"celeste-part-1"},{"date":"2022-03-26","slug":"tunic-review"},{"date":"2021-08-20","slug":"writing-is-hard"},{"date":"2021-08-04","slug":"mtg-card-seer"},{"date":"2021-07-31","slug":"mtga-july-2021-retrospect"},{"date":"2021-07-29","slug":"deaths-door-review"},{"date":"2021-05-02","slug":"frustrations-of-mtga-client"},{"date":"2021-05-01","slug":"mtga-april-2021-retrospect"},{"date":"2021-04-14","slug":"mtg-deck-archive-2021-04-14"},{"date":"2021-04-12","slug":"strixhaven-historic-shakeup"},{"date":"2021-04-01","slug":"mtga-march-2021-retrospect"},{"date":"2021-03-30","slug":"why-a-blog"}],"slug":"game-devlog-part-3"},"__N_SSG":true}