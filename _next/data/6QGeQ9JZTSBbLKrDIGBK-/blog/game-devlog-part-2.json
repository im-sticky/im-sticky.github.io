{"pageProps":{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      p: \"p\",\n      h2: \"h2\",\n      ul: \"ul\",\n      li: \"li\"\n    }, _provideComponents(), props.components), {Figure, InternalLink} = _components;\n    if (!Figure) _missingMdxReference(\"Figure\", true);\n    if (!InternalLink) _missingMdxReference(\"InternalLink\", true);\n    return _jsxs(_Fragment, {\n      children: [_jsx(_components.p, {\n        children: \"Welcome back to another development log of my game. Aside from fighting with the Godot editor, I have been having a positive experience with the engine itself. It's docs are good enough to be able to get by mostly on my own. The questions & answers available on their forums as well videos people put out on youtube are all great and incredibly helpful. I have to say I'm quite happy with it so far (aside from my editor woes).\"\n      }), \"\\n\", _jsx(_components.h2, {\n        children: \"Game updates\"\n      }), \"\\n\", _jsx(Figure, {\n        video: \"devlog-update-1.webm\",\n        caption: \"First set of updates to my game\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"This iteration has a laundry list of updates. A lot of background invisible updates to my system for managing player and hitbox states, as well as a lot of basic features you would expect to find in a fighting game.\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Features of this version in no particular order:\"\n      }), \"\\n\", _jsxs(_components.ul, {\n        children: [\"\\n\", _jsx(_components.li, {\n          children: \"Variable jump heights\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Disallow movement when performing an attack\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Add hitbox hitstop\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Handle directional inputs for attacks\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Migrate hitbox state to individual nodes\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Hook player health into UI element\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Add different sprites for player states\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Continue hitboxes where they left off after experiencing hitstop\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Make hitstop halt player momentum in air\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Various players states and transitions between them\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Formula for calculating launch speed and hitstun\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Adjustable gravity / weight / ground speed / air speed / dash speed\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Fix launch vector sudden stop\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Add double jump\"\n        }), \"\\n\", _jsx(_components.li, {\n          children: \"Add aerial attack landing cancelling and end lag\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"First post available \", _jsx(InternalLink, {\n          to: \"/blog/game-devlog-part-1\",\n          children: \"here\"\n        }), \".\"]\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{}},"frontMatter":{"title":"Game Devlog - First round of updates","description":"An update of my exploits with game development and Godot.","date":"2023-11-06"},"posts":[{"date":"2023-11-06","slug":"game-devlog-part-2"},{"date":"2023-10-15","slug":"game-devlog-part-1"},{"date":"2022-12-29","slug":"celeste-part-3"},{"date":"2022-12-19","slug":"celeste-part-2"},{"date":"2022-12-04","slug":"celeste-part-1"},{"date":"2022-03-26","slug":"tunic-review"},{"date":"2021-08-20","slug":"writing-is-hard"},{"date":"2021-08-04","slug":"mtg-card-seer"},{"date":"2021-07-31","slug":"mtga-july-2021-retrospect"},{"date":"2021-07-29","slug":"deaths-door-review"},{"date":"2021-05-02","slug":"frustrations-of-mtga-client"},{"date":"2021-05-01","slug":"mtga-april-2021-retrospect"},{"date":"2021-04-14","slug":"mtg-deck-archive-2021-04-14"},{"date":"2021-04-12","slug":"strixhaven-historic-shakeup"},{"date":"2021-04-01","slug":"mtga-march-2021-retrospect"},{"date":"2021-03-30","slug":"why-a-blog"}],"slug":"game-devlog-part-2"},"__N_SSG":true}