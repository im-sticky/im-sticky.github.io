{"pageProps":{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      p: \"p\",\n      strong: \"strong\",\n      h2: \"h2\"\n    }, _provideComponents(), props.components);\n    return _jsxs(_Fragment, {\n      children: [_jsxs(_components.p, {\n        children: [\"I recently lost a match on arena while playing a \", _jsx(\"card-link\", {\n          name: \"Tainted Pact\",\n          children: \"Tainted\"\n        }), \" \", _jsx(\"card-link\", {\n          name: \"Thassa's Oracle\",\n          children: \"Oracle\"\n        }), \" combo deck. Not because my opponent beat me in a fair game of Magic, but because I didn't understand how Arena would treat me playing \", _jsx(\"card-link\", {\n          children: \"Thassa's Oracle\"\n        }), \" and then pushing my hotkey for full-control.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"How the deck works is that basically you play \", _jsx(\"card-link\", {\n          children: \"Tainted Pact\"\n        }), \" in a near-singleton deck and exile your whole library allowing you to then play a \", _jsx(\"card-link\", {\n          children: \"Thassa's Oracle\"\n        }), \" to win the game on the spot. Because \", _jsx(\"card-link\", {\n          children: \"Tainted Pact\"\n        }), \" is an instant, there are a few variations of how you can go about winning with the combo. One such variation is playing \", _jsx(\"card-link\", {\n          children: \"Thassa's Oracle\"\n        }), \" first, and with its trigger on the stack you cast \", _jsx(\"card-link\", {\n          children: \"Tainted Pact\"\n        }), \". It seems like the order you do this is irrelevant, but there is a caveat that makes this order something you \", _jsx(_components.strong, {\n          children: \"have\"\n        }), \" to do.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"The way \", _jsx(\"card-link\", {\n          children: \"Tainted Pact\"\n        }), \" resolves on Arena is that there's an animation that moves a card from your library to exile and asks if you want to put it in your hand or continue the process. Between the animation happening and the text popping up and hitting to continue the process, it takes maybe about a full 2 seconds for each iteration. The kicker to this is that you do \", _jsx(_components.strong, {\n          children: \"not\"\n        }), \" get any additional time on your rope for the turn for each of these iterations. That means that if you were to cast pact with a full library, you \", _jsx(_components.strong, {\n          children: \"can not\"\n        }), \" click through the entire process to exile your whole library or up to 1 card left before the rope burns down causing your turn to end. When your turn ends in the middle of a \", _jsx(\"card-link\", {\n          children: \"Tainted Pact\"\n        }), \" resolution, arena resolves the spell by exiling your whole library (or up to a duplicate card). So, if you have the \", _jsx(\"card-link\", {\n          children: \"Thassa's Oracle\"\n        }), \" trigger on the stack when you cast \", _jsx(\"card-link\", {\n          children: \"Tainted Pact\"\n        }), \" and you time out, Arena will resolve the spell and the trigger by exiling your whole library and giving you the win since \", _jsx(\"card-link\", {\n          children: \"Thassa's Oracle\"\n        }), \" condition is resolved. A silly workaround, but effective.\"]\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Coming back to my original frustration. While it is indeed related to this interaction, it isn't exactly specific to it. To successfully do this, you must have full-control enabled in arena to cast \", _jsx(\"card-link\", {\n          children: \"Tainted Pact\"\n        }), \" in response to your own trigger. In my case, I had dragged \", _jsx(\"card-link\", {\n          children: \"Thassa's Oracle\"\n        }), \" to cast it and hit my hotkey to turn on full-control. However, because of how quickly Arena resolves things, even though \", _jsx(\"card-link\", {\n          children: \"Thassa's Oracle\"\n        }), \" was still visually on the stack for me when I activated full-control, Arena had already processed that its trigger was supposed to resolve not giving me the opportunity to cast \", _jsx(\"card-link\", {\n          children: \"Tainted Pact\"\n        }), \". Naturally, this is something that a player would never lose to in person.\"]\n      }), \"\\n\", _jsx(_components.h2, {\n        children: \"I'm not mad, I'm just disappointed\"\n      }), \"\\n\", _jsxs(_components.p, {\n        children: [\"Arena has so many quality of life improvements over MTGO that make it a much nicer experience to play on. Things like the auto-tapper are a godsend. But they all can't be perfect. The amount of times I've lost to things like this happening are not negligible. Issues when auto-tapper decides it should use the mana from \", _jsx(\"card-link\", {\n          children: \"Guardian Idol\"\n        }), \" itself when you activate it, or leaving up the wrong colour of mana because it does not take into consideration a cost reduction in your hand are very frustrating. It feels like there is almost a right of passage to lose games with each specific niche interaction that you must go through before you can play a deck that has them. Don't get me wrong, I like Arena a lot. It just sucks that sometimes you lose to the program itself and not the game.\"]\n      })]\n    });\n  }\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"frontMatter":{"title":"Frustrations with the MTG Arena client","description":"The MTG Arena client is both a godsend and awful at the same time for game play.","date":"2021-05-02"},"posts":[{"date":"2022-12-04","slug":"celeste-part-1"},{"date":"2022-03-26","slug":"tunic-review"},{"date":"2021-08-20","slug":"writing-is-hard"},{"date":"2021-08-04","slug":"mtg-card-seer"},{"date":"2021-07-31","slug":"mtga-july-2021-retrospect"},{"date":"2021-07-29","slug":"deaths-door-review"},{"date":"2021-05-02","slug":"frustrations-of-mtga-client"},{"date":"2021-05-01","slug":"mtga-april-2021-retrospect"},{"date":"2021-04-14","slug":"mtg-deck-archive-2021-04-14"},{"date":"2021-04-12","slug":"strixhaven-historic-shakeup"},{"date":"2021-04-01","slug":"mtga-march-2021-retrospect"},{"date":"2021-03-30","slug":"why-a-blog"}],"slug":"frustrations-of-mtga-client"},"__N_SSG":true}